extends layout

block content
  p hi, #{username}
    if page == 1  
      |&nbsp;[
      a(href= back_link) back to view all attempts
      |]
    else if page > 1
      |&nbsp;[
      a(href='javascript:void(null)' onclick="showPreviousQuestion()") show previous page below
      |&nbsp;,&nbsp; 
      a(href='javascript:void(null)' onclick="hidePreviousQuestion()") hide previous page
      |]
    |&nbsp;[
    a(href= '/logout') logout
    |]
  p You can use two fingers to zoom in and out, and move left and right (for smartphones and tablets). You may need to use landscape position for iPhones.
  p Page #{page} of #{total_pages}
  button#btn_pen write
    i.material-icons.enb#pen_correcting edit
  button#btn_eraser erase
    i.material-icons.disb#eraser_correcting crop_square
  form(action= form_action, method="post")
    input(name='total_pages' type='hidden', value=total_pages)
    button#btn_submit(type="submit") submit
      i.material-icons cloud_upload 
    input#canvas_correcting(type="hidden", name="canvas_correcting")
  br
  div(style="position: absolute; z-index: 1;")
    img#question(src= img_src_qn, width="100%", height="100%")
  div(style="position: absolute; z-index: 2;")
    img#answer(src= img_src_ans, width="100%", height="100%")
  div(style="position: absolute; z-index: 3;")
    img#marking(src= img_src_mark, width="100%", height="100%")
  canvas.pen#correcting(style="border: 1px solid black; position: absolute; z-index: 4;")
  div(id="prev")
    div(id="prev_qn" class="hide" style="border: 1px solid black; position: absolute; z-index: 5; margin-left:auto; margin-right:auto; width: 75%;")
      img#view-prev-question(src= img_src_prev_qn, width="75%", height="75%")
    div(id="prev_ans" class="hide" style="position: absolute; z-index: 6; margin-left:auto; margin-right:auto; width: 75%;")
      img#view-prev-answer(src= img_src_prev_ans, width="75%", height="75%")
    div(id="prev_marking" class="hide" style="position: absolute; z-index: 7; margin-left:auto; margin-right:auto; width: 75%;")
      img#view-prev-marking(src= img_src_prev_mark, width="75%", height="75%")
    div(id="prev_correction" class="hide" style="position: absolute; z-index: 7; margin-left:auto; margin-right:auto; width: 75%;")
      img#view-prev-correction(src= img_src_prev_correction, width="75%", height="75%")
  script.
    var paint
    var clickX = new Array()
    var clickY = new Array()
    var clickXpercent = new Array()
    var clickYpercent = new Array()
    var clickDrag = new Array()
    var clickColor = new Array()
    var eraser = false
    var pen = true
    function showPreviousQuestion() {
      var question = document.getElementById('question')
      var question_height = question.height
      var prev = document.getElementById('prev')
      prev.style = "display:block; position:relative; top:" + (question_height * 1.01) + "px;"

      var div_prev_qn = document.getElementById('prev_qn')
      div_prev_qn.classList.remove('hide')
      div_prev_qn.classList.add('show')
      var div_prev_ans = document.getElementById('prev_ans')
      div_prev_ans.classList.remove('hide')
      div_prev_ans.classList.add('show')
      var div_prev_marking = document.getElementById('prev_marking')
      div_prev_marking.classList.remove('hide')
      div_prev_marking.classList.add('show')
      var div_prev_correction = document.getElementById('prev_correction')
      div_prev_correction.classList.remove('hide')
      div_prev_correction.classList.add('show')
    }
    function hidePreviousQuestion() {
      var div_prev_qn = document.getElementById('prev_qn')
      div_prev_qn.classList.remove('show')
      div_prev_qn.classList.add('hide')
      var div_prev_ans = document.getElementById('prev_ans')
      div_prev_ans.classList.remove('show')
      div_prev_ans.classList.add('hide')
      var div_prev_marking = document.getElementById('prev_marking')
      div_prev_marking.classList.remove('show')
      div_prev_marking.classList.add('hide')
      var div_prev_correction = document.getElementById('prev_correction')
      div_prev_correction.classList.remove('show')
      div_prev_correction.classList.add('hide')
    }
    function init() {
      resizeCanvas()
      document.getElementById('correcting').addEventListener('mousedown', savecoord)
      document.getElementById('correcting').addEventListener('mousemove', savecoord)
      document.getElementById('correcting').addEventListener('mouseup', stopdraw)
      document.getElementById('correcting').addEventListener('mouseleave', stopdraw)
      document.getElementById('correcting').addEventListener('touchstart', savecoord)
      document.getElementById('correcting').addEventListener('touchmove', savecoord)
      document.getElementById('correcting').addEventListener('touchend', stopdraw)
      document.getElementById('btn_pen').addEventListener('click', toggletool)
      document.getElementById('btn_eraser').addEventListener('click', toggletool)
      document.getElementById('btn_submit').addEventListener('click', submit)
    }
    function resizeCanvas() {
      var question = document.getElementById('question')
      var question_width = question.width
      var question_height = question.height
      console.log('question_width ' + question_width)
      console.log('question_height ' + question_height)
      console.log('question natural width ' + question.naturalWidth)
      console.log('question natural height ' + question.naturalHeight)
      console.log('padding ' + question.style.padding)
      console.log('border ' + question.style.border)
      console.log('margin ' + question.style.margin)
      var question_rect = question.getBoundingClientRect()
      console.log('left ' + question_rect.left)
      console.log('top ' + question_rect.top)
      var correcting = document.getElementById('correcting')
      correcting.style.left = question_rect.left + 'px'
      correcting.width = question_width
      correcting.height = question_height
      console.log('correcting_width ' + correcting.width)
      console.log('correcting_height ' + correcting.height)
      console.log('correcting.style.left ' + correcting.style.left)
      redraw()

      var prev = document.getElementById('prev')
      prev.style = "display:block; position:relative; top:" + (question_height * 1.01) + "px;"
    }
    function redraw() {
      console.log('redraw')
      var correction_context = document.getElementById('correcting').getContext('2d')
      correction_context.clearRect(0, 0, correction_context.canvas.width, correction_context.canvas.height)
      correction_context.lineJoin = 'round'
      
      for (var i = 0; i < clickX.length; i++) {
        if (clickColor[i] == 'transparent') {
          correction_context.lineWidth = 5
          correction_context.globalCompositeOperation = 'destination-out'
          correction_context.strokeStyle = 'rgba(0,0,0,1)'
        } else {
          correction_context.lineWidth = 2
          correction_context.globalCompositeOperation = 'source-over'
          correction_context.strokeStyle = clickColor[i]
        }
        correction_context.beginPath()
        if (clickDrag[i] && i) {
          var x = clickXpercent[i-1] * correction_context.canvas.width
          var y = clickYpercent[i-1] * correction_context.canvas.height
          //correction_context.moveTo(clickX[i-1], clickY[i-1])
          correction_context.moveTo(x, y)
        } else {
          var x = clickXpercent[i] * correction_context.canvas.width
          var y = clickYpercent[i] * correction_context.canvas.height
          //correction_context.moveTo(clickX[i], clickY[i])
          correction_context.moveTo(x, y)
        }
        var x = clickXpercent[i] * correction_context.canvas.width
        var y = clickYpercent[i] * correction_context.canvas.height
        //marking_context.lineTo(clickX[i], clickY[i])
        correction_context.lineTo(x, y)
        correction_context.stroke()
      }
    }
    function savecoord(event) {
      console.log("event " + event.type)
      var correcting = document.getElementById('correcting')
      console.log('offsetLeft ' + correcting.offsetLeft)
      console.log('offsetTop ' + correcting.offsetTop)
      //mouse events (laptop/desktop)
      if (event.type == 'mousedown' || event.type == 'mousemove') {
        console.log('pageX ' + event.pageX)
        console.log('pageY ' + event.pageY)
        var mouseX = event.pageX - correcting.offsetLeft
        var mouseY = event.pageY - correcting.offsetTop
        var mouseXpercent = mouseX / correcting.width
        var mouseYpercent = mouseY / correcting.height
        console.log('mouseX ' + mouseX)
        console.log('mouseY ' + mouseY)
        if (event.type == 'mousedown') {
          paint = true
          clickX.push(mouseX)
          clickY.push(mouseY)
          clickXpercent.push(mouseXpercent)
          clickYpercent.push(mouseYpercent)
          clickDrag.push(false)
          if(pen) {
            clickColor.push('#00cc00')
          } else {
            clickColor.push('transparent')
          }
          redraw()
        }
        if (event.type == 'mousemove') {
          if (paint) {
            clickX.push(mouseX)
            clickY.push(mouseY)
            clickXpercent.push(mouseXpercent)
            clickYpercent.push(mouseYpercent)
            clickDrag.push(true)
            if(pen) {
              clickColor.push('#00cc00')
            } else {
              clickColor.push('transparent')
            }
            redraw()
          }
        }
      }
      //touchscreen devices (smartphone, tablet)
      if(event.type == 'touchstart') {
        var targetTouches = event.targetTouches
        var changedTouches = event.changedTouches
        if (targetTouches.length == 1 && changedTouches.length == 1) {
          //event.preventDefault()
          paint = true
          console.log('touchstart pageX is ' + targetTouches[0].pageX)
          console.log('touchstart pageY is ' + targetTouches[0].pageY)
          var touchX = targetTouches[0].pageX - correcting.offsetLeft
          var touchY = targetTouches[0].pageY - correcting.offsetTop
          console.log('touchstart touchX is ' + touchX)
          console.log('touchstart touchY is ' + touchY)
          var touchXpercent = touchX / correcting.width
          var touchYpercent = touchY / correcting.height
          console.log('touchstart touchXpercent is ' + touchXpercent)
          console.log('touchstart touchYpercent is ' + touchYpercent)
          clickX.push(touchX)
          clickY.push(touchY)
          clickXpercent.push(touchXpercent)
          clickYpercent.push(touchYpercent)
          clickDrag.push(false)
          if(pen) {
            clickColor.push('#00cc00')
          } else {
            clickColor.push('transparent')
          }
          redraw()
        }
      }
      if(event.type == 'touchmove') {
        if(paint) {
          var targetTouches = event.targetTouches
          var changedTouches = event.changedTouches
          if (targetTouches.length == 1 && changedTouches.length == 1) {
            //touchmoveCache.push(event)
            event.preventDefault()
            console.log('touchmove pageX is ' + targetTouches[0].pageX)
            console.log('touchmove pageY is ' + targetTouches[0].pageY)
            var touchX = targetTouches[0].pageX - correcting.offsetLeft
            var touchY = targetTouches[0].pageY - correcting.offsetTop
            console.log('touchmove touchX is ' + touchX)
            console.log('touchmove touchY is ' + touchY)
            var touchXpercent = touchX / correcting.width
            var touchYpercent = touchY / correcting.height
            console.log('touchmove touchXpercent is ' + touchXpercent)
            console.log('touchmove touchYpercent is ' + touchYpercent)
            clickX.push(touchX)
            clickY.push(touchY)
            clickXpercent.push(touchXpercent)
            clickYpercent.push(touchYpercent)
            clickDrag.push(true)
            if(pen) {
              clickColor.push('#00cc00')
            } else {
              clickColor.push('transparent')
            }
            redraw()
          }
        }
      }
    }
    function stopdraw() {
      paint = false
    }
    function toggletool(event) {
      if (event.target.id == 'btn_pen') {
        if (!pen & eraser) {
          pen = !pen
          eraser = !eraser
        }
      }
      if (event.target.id == 'btn_eraser') {
        if (pen & !eraser) {
          pen = !pen
          eraser = !eraser
        }
      }
      console.log('pen is ' + pen)
      console.log('eraser is ' + eraser)
      if (pen) {
        document.getElementById('pen_correcting').classList.remove('disb')
        document.getElementById('pen_correcting').classList.add('enb')
        document.getElementById('eraser_correcting').classList.remove('enb')
        document.getElementById('eraser_correcting').classList.add('disb')
        document.getElementById('correcting').classList.remove('eraser')
        document.getElementById('correcting').classList.add('pen')
      } else {
        document.getElementById('pen_correcting').classList.remove('enb')
        document.getElementById('pen_correcting').classList.add('disb')
        document.getElementById('eraser_correcting').classList.remove('disb')
        document.getElementById('eraser_correcting').classList.add('enb')
        document.getElementById('correcting').classList.remove('pen')
        document.getElementById('correcting').classList.add('eraser')
      }
    }
    function submit() {
      var question = document.getElementById('question')
      var correcting = document.getElementById('correcting')
      var cv = document.createElement('canvas')
      cv.width = question.naturalWidth
      cv.height = question.naturalHeight
      var ctx = cv.getContext('2d')
      ctx.drawImage(correcting, 0, 0, correcting.width, correcting.height, 0, 0, cv.width, cv.height)
      console.log("cv in base64 " + cv.toDataURL('image/png'))
      document.getElementById('canvas_correcting').value = cv.toDataURL('image/png')
      var form = document.getElementsByTagName('form')
      form[0].submit()
    }
    document.addEventListener('DOMContentLoaded', init)
    window.addEventListener('resize', resizeCanvas)
    